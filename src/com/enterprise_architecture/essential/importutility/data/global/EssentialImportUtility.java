//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.08 at 02:47:23 PM BST 
//

/**
 * Extended 18.11.2019 	JWC to add a non-persisted attribute 
 * 
 */

package com.enterprise_architecture.essential.importutility.data.global;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import com.enterprise_architecture.essential.importutility.data.common.DerivedInstanceType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}ImportUtilityVersion"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}ImportEnvironments" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}GlobalValueTemplates" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}GlobalInstances" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}ImportActivities" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}ImportScriptTemplates" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}ExcelImportTemplates" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}SourceRepositories" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}ReferenceEnvironment"/>
 *         &lt;element ref="{http://www.enterprise-architecture.org/essential/importutility/config}IncludesDirectoryPath"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "importUtilityVersion",
    "importEnvironments",
    "globalValueTemplates",
    "globalInstances",
    "importActivities",
    "importScriptTemplates",
    "excelImportTemplates",
    "sourceRepositories",
    "referenceEnvironment",
    "includesDirectoryPath"
    
})
@XmlRootElement(name = "EssentialImportUtility")
public class EssentialImportUtility {

    @XmlElement(name = "ImportUtilityVersion", required = true)
    protected String importUtilityVersion;
    @XmlElement(name = "ImportEnvironments")
    protected List<ImportEnvironment> importEnvironments;
    @XmlElement(name = "GlobalValueTemplates")
    protected List<GlobalValueTemplate> globalValueTemplates;
    @XmlElement(name = "GlobalInstances")
    protected List<DerivedInstanceType> globalInstances;
    @XmlElement(name = "ImportActivities")
    protected List<ImportActivity> importActivities;
    @XmlElement(name = "ImportScriptTemplates")
    protected List<ImportScriptTemplate> importScriptTemplates;
    @XmlElement(name = "ExcelImportTemplates")
    protected List<ExcelImportTemplate> excelImportTemplates;
    @XmlElement(name = "SourceRepositories")
    protected List<SourceRepository> sourceRepositories;
    @XmlElement(name = "ReferenceEnvironment", required = true)
    protected ImportEnvironment referenceEnvironment;
    @XmlElement(name = "IncludesDirectoryPath", required = true)
    protected String includesDirectoryPath;

    
    /**
     * Gets the value of the importUtilityVersion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getImportUtilityVersion() {
        return importUtilityVersion;
    }

    /**
     * Sets the value of the importUtilityVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setImportUtilityVersion(String value) {
        this.importUtilityVersion = value;
    }

    /**
     * Gets the value of the importEnvironments property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the importEnvironments property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getImportEnvironments().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ImportEnvironment }
     * 
     * 
     */
    public List<ImportEnvironment> getImportEnvironments() {
        if (importEnvironments == null) {
            importEnvironments = new ArrayList<ImportEnvironment>();
        }
        return this.importEnvironments;
    }

    /**
     * Gets the value of the globalValueTemplates property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the globalValueTemplates property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGlobalValueTemplates().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GlobalValueTemplate }
     * 
     * 
     */
    public List<GlobalValueTemplate> getGlobalValueTemplates() {
        if (globalValueTemplates == null) {
            globalValueTemplates = new ArrayList<GlobalValueTemplate>();
        }
        return this.globalValueTemplates;
    }

    /**
     * Gets the value of the globalInstances property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the globalInstances property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGlobalInstances().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DerivedInstanceType }
     * 
     * 
     */
    public List<DerivedInstanceType> getGlobalInstances() {
        if (globalInstances == null) {
            globalInstances = new ArrayList<DerivedInstanceType>();
        }
        return this.globalInstances;
    }

    /**
     * Gets the value of the importActivities property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the importActivities property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getImportActivities().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ImportActivity }
     * 
     * 
     */
    public List<ImportActivity> getImportActivities() {
        if (importActivities == null) {
            importActivities = new ArrayList<ImportActivity>();
        }
        return this.importActivities;
    }

    /**
     * Gets the value of the importScriptTemplates property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the importScriptTemplates property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getImportScriptTemplates().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ImportScriptTemplate }
     * 
     * 
     */
    public List<ImportScriptTemplate> getImportScriptTemplates() {
        if (importScriptTemplates == null) {
            importScriptTemplates = new ArrayList<ImportScriptTemplate>();
        }
        return this.importScriptTemplates;
    }

    /**
     * Gets the value of the excelImportTemplates property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the excelImportTemplates property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExcelImportTemplates().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExcelImportTemplate }
     * 
     * 
     */
    public List<ExcelImportTemplate> getExcelImportTemplates() {
        if (excelImportTemplates == null) {
            excelImportTemplates = new ArrayList<ExcelImportTemplate>();
        }
        return this.excelImportTemplates;
    }

    /**
     * Gets the value of the sourceRepositories property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sourceRepositories property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSourceRepositories().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SourceRepository }
     * 
     * 
     */
    public List<SourceRepository> getSourceRepositories() {
        if (sourceRepositories == null) {
            sourceRepositories = new ArrayList<SourceRepository>();
        }
        return this.sourceRepositories;
    }

    /**
     * Gets the value of the referenceEnvironment property.
     * 
     * @return
     *     possible object is
     *     {@link ImportEnvironment }
     *     
     */
    public ImportEnvironment getReferenceEnvironment() {
        return referenceEnvironment;
    }

    /**
     * Sets the value of the referenceEnvironment property.
     * 
     * @param value
     *     allowed object is
     *     {@link ImportEnvironment }
     *     
     */
    public void setReferenceEnvironment(ImportEnvironment value) {
        this.referenceEnvironment = value;
    }

    /**
     * Gets the value of the includesDirectoryPath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIncludesDirectoryPath() {
        return includesDirectoryPath;
    }

    /**
     * Sets the value of the includesDirectoryPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIncludesDirectoryPath(String value) {
        this.includesDirectoryPath = value;
    }

    
}
